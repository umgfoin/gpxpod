name: CI

on:
  push:
    branches: [ master, test ]
  pull_request:
    branches: [ master ]

env:
  APP_ID: gpxpod

jobs:
  tests:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    strategy:
      fail-fast: false
      matrix:
        #php-versions: [7.4, 8.0, 8.1]
        php-versions: [7.4]
        #databases: [sqlite, mysql, pgsql]
        databases: [sqlite]
        #server-versions: [stable25, master]
        server-versions: [master]
        #exclude:
        #  - php-versions: 8.1
        #    server-versions: stable23

    name: php${{ matrix.php-versions }}-${{ matrix.databases }}-${{ matrix.server-versions }}

    services:
      postgres:
        image: postgres:14
        ports:
          - 4445:5432/tcp
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: rootpassword
          POSTGRES_DB: nextcloud
        options: --health-cmd pg_isready --health-interval 5s --health-timeout 2s --health-retries 5
      mysql:
        image: mariadb:10.5
        ports:
          - 4444:3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
        options: --health-cmd="mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Use Node 16
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl, sqlite3, curl, xml, json, zip, gd
          ini-values: post_max_size=256M, max_execution_time=180
          coverage: xdebug
          tools: php-cs-fixer, phpunit

      - uses: actions/checkout@v2

      - name: Setup Nextcloud
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt update -y
          sudo apt install python3-pip git sudo \
            unzip curl wget sed make rsync gpsbabel -y
          sudo -H pip3 install anybadge
          sudo curl --location --output /usr/local/bin/phpunit https://phar.phpunit.de/phpunit.phar
          sudo chmod +x /usr/local/bin/phpunit
          mkdir -p ~/html
          echo "git clone https://github.com/nextcloud/server.git --recursive --depth 1 -b ${{ matrix.server-versions }} ~/html/nextcloud"
          git clone https://github.com/nextcloud/server.git --recursive --depth 1 -b ${{ matrix.server-versions }} ~/html/nextcloud
          sed -i $'s|if (substr($fullPath, 0, strlen($root) + 1) === $root . \'/\')|if (is_string($root) and substr($fullPath, 0, strlen($root) + 1) === $root . \'/\')|g' ~/html/nextcloud/lib/autoloader.php
          cp -r $GITHUB_WORKSPACE ~/html/nextcloud/apps/${{ env.APP_ID }}
          # SETUP NEXTCLOUD
          if [ "${{ matrix.databases }}" = "mysql" ]; then
            export DB_PORT=4444
          elif [ "${{ matrix.databases }}" = "pgsql" ]; then
            export DB_PORT=4445
          fi
          echo "php ~/html/nextcloud/occ maintenance:install --verbose --database=${{ matrix.databases }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass admin"
          php ~/html/nextcloud/occ maintenance:install --verbose --database=${{ matrix.databases }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass admin
          cd ~/html/nextcloud/apps/${{ env.APP_ID }}
          composer install --prefer-dist
          php ~/html/nextcloud/occ app:enable --force ${{ env.APP_ID }}
          php ~/html/nextcloud/occ maintenance:mode --off
          echo "##### App is installed"

      - name: Perform PhpUnit tests with coverage
        if: ${{ matrix.databases == 'sqlite' && matrix.php-versions == '8.1' && matrix.server-versions == 'master' }}
        run: |
          mkdir /tmp/coverage
          cd /tmp
          echo "##### PHPunit"
          cd ~/html/nextcloud/apps/${{ env.APP_ID }}/
          XDEBUG_MODE=coverage phpunit --configuration ~/html/nextcloud/apps/${{ env.APP_ID }}/phpunit.xml --coverage-text --color=never --coverage-html coverage > /tmp/cov.txt && SUCCESS=yes || SUCCESS=no
          echo "phpunit finished ############################"
          cat /tmp/cov.txt
          if [ $SUCCESS = "yes" ]; then echo "TESTS PASSED"; else echo "TESTS FAILED"; exit 1; fi
          echo "generating badge ############################"
          grep "^\s\+Lines:" /tmp/cov.txt > /tmp/cov.line.txt
          grep -o "[0-9]\+\.[0-9]\+" /tmp/cov.line.txt > /tmp/cov.value.txt
          mv /tmp/cov.value.txt /tmp/coverage/cov.value.txt
          echo "anybadge ############################"
          cat /tmp/coverage/cov.value.txt
          anybadge -l coverage -v `cat /tmp/coverage/cov.value.txt` -m "%.2f%%" -f /tmp/coverage/coverage.svg 50=red 70=orange 80=yellow 90=green

      - name: Perform PhpUnit tests
        if: ${{ !(matrix.databases == 'sqlite' && matrix.php-versions == '8.1' && matrix.server-versions == 'master') }}
        run: |
          phpunit --configuration ~/html/nextcloud/apps/${{ env.APP_ID }}/phpunit.xml && SUCCESS=yes || SUCCESS=no
          if [ $SUCCESS = "yes" ]; then echo "TESTS PASSED"; else echo "TESTS FAILED"; exit 1; fi

      - name: Upload coverage
        if: ${{ github.ref == 'refs/heads/master' && matrix.databases == 'sqlite' && matrix.php-versions == '8.1' && matrix.server-versions == 'master' }}
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: /tmp/coverage

      - name: Deploy
        if: ${{ github.ref == 'refs/heads/master' && matrix.databases == 'sqlite' && matrix.php-versions == '8.1' && matrix.server-versions == 'master' }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: /tmp/coverage
